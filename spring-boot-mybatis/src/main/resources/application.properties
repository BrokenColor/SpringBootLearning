## master 数据源配置
master.datasource.url=jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf8&useSSL=false
master.datasource.username=root
master.datasource.password=password
master.datasource.driverClassName=com.mysql.jdbc.Driver
master.datasource.initialSize=5
master.datasource.minIdle=5
master.datasource.maxActive=20
#连接等待超时时间
master.datasource.maxWait=60000
#配置隔多久进行一次检测(检测可以关闭的空闲连接)
master.datasource.timeBetweenEvictionRunsMillis=60000
#配置连接在池中的最小生存时间
master.datasource.minEvictableIdleTimeMillis=300000
master.datasource.validationQuery=SELECT 1 FROM DUAL
master.datasource.testWhileIdle=true
master.datasource.testOnBorrow=false
master.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
master.datasource.poolPreparedStatements=true
master.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
master.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
master.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


## cluster 数据源配置
cluster.datasource.url=jdbc:mysql://127.0.0.1:3306/springbootdemo?useUnicode=true&characterEncoding=utf8&useSSL=false
cluster.datasource.username=root
cluster.datasource.password=password
cluster.datasource.driverClassName=com.mysql.jdbc.Driver
cluster.datasource.initialSize=5
cluster.datasource.minIdle=5
cluster.datasource.maxActive=20
#连接等待超时时间
cluster.datasource.maxWait=60000
#配置隔多久进行一次检测(检测可以关闭的空闲连接)
cluster.datasource.timeBetweenEvictionRunsMillis=60000
#配置连接在池中的最小生存时间
cluster.datasource.minEvictableIdleTimeMillis=300000
cluster.datasource.validationQuery=SELECT 1 FROM DUAL
cluster.datasource.testWhileIdle=true
cluster.datasource.testOnBorrow=false
cluster.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
cluster.datasource.poolPreparedStatements=true
cluster.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
cluster.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
cluster.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

## Mybatis 配置
#指向实体类包路径
#mybatis.typeAliasesPackage=com.mybatis.domain
#classpath 路径下 mapper 包下，* 代表会扫描所有 xml 文件
#mybatis.mapperLocations=classpath:mapper/*.xml

#当出现 404 错误时, 直接抛出异常
#spring.mvc.throw-exception-if-no-handler-found=true 
#---spring.mvc.throw-exception-if-no-handler-found=false
#不要为我们工程中的资源文件建立映射
#spring.resources.add-mappings=false 
#---spring.resources.add-mappings=true 

#log日志文件
logging.level.root=info
spring.output.ansi.enabled=DETECT
#设置文件，可以是绝对路径，也可以是相对路径。如：logging.file=my.log
logging.file=logs/my.log
#设置目录，会在该目录下创建spring.log文件，并写入日志内容
#logging.path=logs
#

#添加PageHelper配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
pagehelper.page-size-zero=true


# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
spring.redis.jedis.pool.max-wait=1ms
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
spring.redis.jedis.pool.max-idle=0
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0ms